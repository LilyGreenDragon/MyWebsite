app.base-url=https://192.168.0.60:8443  //для LogoutController
#app.base-url=http://192.168.0.59
server.port=${SERVER_PORT:8443}
spring.config.import=optional:classpath:applicationsecrets.properties

# Docker compose
 spring.docker.compose.enabled=false

# Data Source
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=app
#spring.datasource.url=jdbc:mysql://localhost:6033/bootdb?useSSL=true&verifyServerCertificate=false&allowPublicKeyRetrieval=true
spring.datasource.url=jdbc:mysql://localhost:6033/bootdb?autoReconnect=true&failOverReadOnly=false&connectTimeout=2000&socketTimeout=5000&useSSL=false&allowMultiQueries=true
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3307/bootdb}
#spring.datasource.url=jdbc:mysql://localhost:3307/bootdb
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
logging.level.org.springframework.jdbc.datasource=DEBUG

# HikariCP параметры
# Пул соединений
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10

spring.datasource.hikari.idle-timeout=5000 # Время жизни неиспользуемого соединения → меньше, чтобы быстрее умирали «мертвые» соединения
spring.datasource.hikari.max-lifetime=10000 # Максимальное время жизни соединения → меньше, чтобы старые соединения быстрее обновлялись
spring.datasource.hikari.connection-timeout=1000 # Таймаут на получение соединения из пула → меньше, чтобы failover быстрее происходил
spring.datasource.hikari.validation-timeout=500 # Быстрый heartbeat для проверки соединения
spring.datasource.hikari.initialization-fail-timeout=-1  # Пул не падает, если мастер недоступен
spring.datasource.hikari.auto-commit=true # Авто-commit
spring.datasource.hikari.leak-detection-threshold=2000 # Детект утечек соединений (опционально)

# Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.show_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.schema-locations=classpath:schema/schema1.sql,classpath:schema/schema2.sql,classpath:schema/schema3.sql,classpath:schema/schema4.sql,classpath:schema/schema5.sql
spring.sql.init.mode=always

# HTTP  PUT,PATCH,DELETE
spring.mvc.hidden-method.filter.enabled=true

spring.jpa.show-sql=true
spring.resources.add-mappings=true
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.servlet.content-type=text/html;charset=UTF-8


spring.messages.encoding=UTF-8
spring.messages.basename=messages/messages

# Email
spring.mail.host=smtp.mail.ru
spring.mail.port=465
mail.transport.protocol = smtps
spring.mail.username= egorchik_mail@mail.ru
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.enable = true

# Важно для работы через прокси
server.forward-headers-strategy=framework
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

spring.redis.password=${SPRING_REDIS_PASSWORD}

spring.main.allow-bean-definition-overriding=true
